<?php

/**
 * Implementation of hook_menu()
 */

function tutor_menu() {

  /**********************************************************************
   **********************************************************************
   **
   ** Application stuff
   **
   **********************************************************************
   **********************************************************************/


  $items['user/tutor/application'] = array (
					    'title' => 'Tutor Application',
					    'page callback' => 'tutor_application',
					    'access arguments' => array('apply to be a tutor'),
					    'file' => 'application.inc',
					    'type' => MENU_NORMAL_ITEM,
					    );
  $items['user/%/tutor/application'] = array (
					      'title callback' => 'title_callback_tutor_application',
					      'title arguments' => array(1),
					      'page callback' => 'tutor_application',
					      'page arguments' => array(1),
					      'access arguments' => array('apply to be a tutor'),
					      'file' => 'application.inc',
					      'type' => MENU_NORMAL_ITEM,
					      );

  $items['user/tutor/application/profile'] = array (
						'title' => 'Tutor Application: Biographical Information',
						'page callback' => 'tutor_application_profile',
						'access arguments' => array('access content'),
						'file' => 'application.inc',
						'type' => MENU_CALLBACK,
						);
  $items['user/%/tutor/application/profile'] = array (
						  'title callback' => 'title_callback_tutor_application',
						  'title arguments' => array(1, "Biographical Information"),
						  'page callback' => 'tutor_application_profile',
						  'page arguments' => array(1),
						  'access arguments' => array('access content'),
						  'file' => 'application.inc',
						  'type' => MENU_CALLBACK,
						  );
  $items['user/tutor/application/consent'] = array (
						    'title' => 'Tutor Application: Consent and Payment',
						    'page callback' => 'tutor_application_consent',
						    'access arguments' => array('access content'),
						    'file' => 'application.inc',
						    'type' => MENU_CALLBACK,
						    );
  $items['user/%/tutor/application/consent'] = array (
						      'title callback' => 'title_callback_tutor_application',
						      'title arguments' => array(1, "Consent and Payment"),
						      'page callback' => 'tutor_application_consent',
						      'page arguments' => array(1),
						      'access arguments' => array('access content'),
						      'file' => 'application.inc',
						      'type' => MENU_CALLBACK,
						      );
  $items['user/tutor/application/contact'] = array (
						    'title' => 'Tutor Application: Contact Information',
						    'page callback' => 'tutor_application_contact',
						    'access arguments' => array('access content'),
						    'file' => 'application.inc',
						    'type' => MENU_CALLBACK,
						    );
  $items['user/%/tutor/application/contact'] = array (
						      'title callback' => 'title_callback_tutor_application',
						      'title arguments' => array(1, "Contact Information"),
						      'page callback' => 'tutor_application_contact',
						      'page arguments' => array(1),
						      'access arguments' => array('access content'),
						      'file' => 'application.inc',
						      'type' => MENU_CALLBACK,
						      );

  /**********************************************************************
   **********************************************************************
   **
   ** Viewing Tutors
   **
   **********************************************************************
   **********************************************************************/

  //  $items['tutors'] = array (
  //			    'title' 

  $items['tutors/%'] = array (
			     'title' => 'Tutor',
			     'page callback' => 'tutor_profile_view',
			     'acces arguments' => array('access content'),
			     'type' => MENU_CALLBACK,
			     );

  return $items;
}

function title_callback_tutor_application($uid, $additional = "") {

  $u = user_load($uid);
  if ($u) {
    $name = $u->name;
  } else {
    $name = "*USER DOES NOT EXIST*";
  }
  return "Tutor Application for " . $name . ($additional ? ": $additional" : "");
}

/**
 * Implementation of hook_perm()
 */

function tutor_perm() {
  return array(
	       'apply to be a tutor',
	       'edit own tutor biography',
	       'edit all tutor biographies',
	       'administer tutors',
	       );
}


/**
 * Implementation of hook_node_info()
 */
function tutor_node_info() {
  return array(
               'tutor' => array
	       (
		'name' => t('Tutor'),
		'module' => 'tutor',
		'description' => t("A tutor's profile."),
		'has_title' => TRUE,
		'title_label' => t('Name'),
		'has_body' => TRUE,
		'body_label' => t('Biography'),
		'min_word_count' => 1,
		'locked' => TRUE,
		)
               );
}



/**
 * Implementation of hook_form()
 */

function tutor_form(&$node, $form_state) {
  $type = node_get_types('type', $node);

  $form['title'] = array
    (
     '#type' => 'textfield',
     '#title' => check_plain($type->title_label),
     '#required' => TRUE,
     '#default_value' => $node->title,
     '#weight' => -5
     );

  $form['body_filter']['body'] = array
    (
     '#type' => 'textarea',
     '#title' => check_plain($type->body_label),
     '#default_value' => $node->body,
     '#required' => TRUE
     );

  $form['body_filter']['filter'] = filter_form($node->format);

  return $form;
}



/********************************************************************************************************
 ********************************************************************************************************
 **
 ** Application stuff
 **
 ********************************************************************************************************
 ********************************************************************************************************/

